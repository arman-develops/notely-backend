// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userID String @id @unique @default(uuid()) @map("user_id")
  firstName String @map("first_name")
  lastName String @map("last_name")
  username String @unique @map("user_name")
  email String @unique @map("email_address")
  profileID String @unique @default(uuid()) @map("profile_id")
  password String @map("password")

  avatar String @default("") @map("avatar")
  bio String @default("") @map("bio")
  preferences String[] @default([]) @map("preferences")
  hasCompletedOnboarding Boolean @default(false) @map("has_completed_onboarding")
  dateJoined DateTime @default(now()) @map("date_joined")
  lastProfileUpdate DateTime @default(now()) @map("last_profile_update")
  isDeleted Boolean @default(false) @map("is_deleted")
  
  notes Entry[]

  @@map("users")
}

model Entry {
  noteID String @id @unique @default(uuid()) @map("note_id")
  noteTitle String @map("note_title")
  synopsis String @map("synopsis")
  content String @map("content")
  isDeleted Boolean @default(false) @map("is_deleted")
  dateCreated DateTime @default(now()) @map("date_created")
  lastUpdated DateTime @default(now()) @map("last_updated")

  isPinned Boolean @default(false) @map("is_pinned")
  authorID String
  author User @relation(fields: [authorID], references: [userID])

  @@map("notes")
}